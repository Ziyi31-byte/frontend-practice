#################### User Service Related APIs ####################
## Types and Inputs ##
type User {
  id: ID!
  email: String!
  password: String! 
  profile: UserProfile
}

type UserProfile {
  name: String!
  age: Int
  location: String
}

input AddUserProfileInput {
  name: String!
  age: Int
  location: String
}

input UpdateUserProfileInput {
  name: String
  age: Int
  location: String
}

type Question {
  id: ID!
  title: String
  description: String
  category: String
  complexity: String
  createdByUser: String! ## use email to identify the user ##
}

input AddQuestionInput {
  title: String!
  description: String!
  category: String
  complexity: String
}

input UpdateQuestionInput {
  title: String
  description: String
  category: String
  complexity: String
}

input AuthInput {
  email: String!
  password: String!
}

type auth {
  email: String!
  password: String!
}

## Queries ##
type Query {
  getAllUsers: [User] ## for testing purpose only ##
  getAllQuestions: [Question]
  accessUserProfile(auth: AuthInput!): User
}

## Mutations ##
type Mutation {
  signUpUser(email: String!, password: String!, profile: AddUserProfileInput!): User
  updateUserProfile(auth: AuthInput!, updates: UpdateUserProfileInput!): User
  deregisterUser(auth: AuthInput!): ID
  
  addQuestion(auth: AuthInput!, input: AddQuestionInput!): Question
  deleteQuestion(id: ID!, auth: AuthInput!): ID
  updateQuestion(id: ID!, auth: AuthInput!, updates: UpdateQuestionInput!): Question
}
